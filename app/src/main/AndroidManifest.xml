<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools">

    <uses-permission android:name="android.permission.REQUEST_ROLE" />
    <uses-permission android:name="android.permission.FOREGROUND_SERVICE"/>
    <uses-permission android:name="android.permission.REORDER_TASKS" />
    <uses-permission android:name="android.permission.SYSTEM_ALERT_WINDOW" />

    <!--Permissions that require approval explanations-->
    <uses-permission android:name="android.permission.PACKAGE_USAGE_STATS"
        tools:ignore="ProtectedPermissions" />
    <uses-permission android:name="android.permission.QUERY_ALL_PACKAGES"
        tools:ignore="QueryAllPackagesPermission" />

    <!--Required for older mobile devices that are below SDK 33-->
    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE"/>

    <!--Required only if your app needs to access videos that other apps created-->
    <uses-permission android:name="android.permission.READ_MEDIA_IMAGES" />
    <uses-permission android:name="android.permission.READ_MEDIA_VIDEO" />
    <uses-permission android:name="android.permission.ACCESS_MEDIA_LOCATION" />

    <application
        android:allowBackup="true"
        android:dataExtractionRules="@xml/data_extraction_rules"
        android:fullBackupContent="@xml/backup_rules"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:theme="@style/Theme.LeadMeClassroomCompanion"
        android:requestLegacyExternalStorage="true"
        tools:targetApi="33">

        <meta-data android:name="android.permission.PACKAGE_USAGE_STATS"
            android:value="Our app is a learning management app that allows students to connect to a
            teachers classroom. This permission allows us to indicate to a teacher when a student may
            be off task, and to return them to their assigned task." />

        <meta-data android:name="android.permission.QUERY_ALL_PACKAGES"
            android:value="Our app is a learning management app that allows students to connect to a
            teachers classroom. This permission allows us to indicate to a teacher what applications
            can be selected for a current task." />

        <activity
            android:name=".MainActivity"
            android:launchMode="singleTop"
            android:exported="true"
            android:alwaysRetainTaskState="true"
            android:screenOrientation="portrait"
            tools:ignore="LockedOrientationActivity">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
                <category android:name="android.intent.category.LAUNCHER" />
                <category android:name="android.app.role.Assistant"/>
            </intent-filter>

            <meta-data
                android:name="android.app.lib_name"
                android:value="" />
        </activity>

        <receiver
            android:name=".vrplayer.VRPlayerBroadcastReceiver"
            android:exported="true"
            tools:ignore="ExportedReceiver">
            <intent-filter>
                <action android:name="com.lumination.VRPlayer" />
            </intent-filter>
        </receiver>

        <service
            android:enabled="true"
            android:name=".services.FirebaseService"
            android:foregroundServiceType="dataSync"
            android:stopWithTask="true"/>

        <service
            android:enabled="true"
            android:name=".services.LeadMeService"
            android:foregroundServiceType="dataSync"
            android:stopWithTask="true"/>

        <service
            android:enabled="true"
            android:name=".services.ScreenBlockService"
            android:foregroundServiceType="mediaProjection"
            android:stopWithTask="true"/>

        <service
            android:enabled="true"
            android:name=".services.PixelService"
            android:foregroundServiceType="mediaProjection"
            android:stopWithTask="true"/>

    </application>

    <queries>
        <intent>
            <action android:name="android.intent.action.MAIN" />
            <category android:name="android.intent.action.LAUNCHER" />
        </intent>
    </queries>
</manifest>